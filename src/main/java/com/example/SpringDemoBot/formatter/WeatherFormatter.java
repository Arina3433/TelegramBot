package com.example.SpringDemoBot.formatter;

import com.example.SpringDemoBot.dto.weather.WeatherResponseDto;
import com.example.SpringDemoBot.service.weather.WeatherEmojiService;
import lombok.RequiredArgsConstructor;
import org.springframework.stereotype.Component;

import java.time.Instant;
import java.time.LocalDateTime;
import java.time.ZoneOffset;

@Component
@RequiredArgsConstructor
public class WeatherFormatter {

    private final WeatherEmojiService emojiService;

    public String format(WeatherResponseDto dto) {
        StringBuilder sb = new StringBuilder();
        var weatherInfo = (dto.getWeather() != null && !dto.getWeather().isEmpty()) ? dto.getWeather().get(0) : null;

        sb.append("üåç –ì–æ—Ä–æ–¥: ").append(dto.getName() != null ? dto.getName() : "–Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω").append("\n\n");

        if (weatherInfo != null) {
            String emoji = emojiService.getEmoji(weatherInfo.getIcon());
            sb.append(emoji).append(" –ü–æ–≥–æ–¥–∞: ").append(weatherInfo.getDescription()).append("\n\n");
        }

        var main = dto.getMain();
        if (main != null) {
            double pressureMmHg = main.getPressure() * 0.75006;
            sb.append("üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: ").append(String.format("%.1f¬∞C", main.getTemp())).append("\n\n")
                    .append("ü§î –û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: ").append(String.format("%.1f¬∞C", main.getFeelsLike())).append("\n\n")
                    .append("üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å: ").append(main.getHumidity()).append("%\n\n")
                    .append("üîΩ –î–∞–≤–ª–µ–Ω–∏–µ: ").append(String.format("%.1f –º–º —Ä—Ç. —Å—Ç.", pressureMmHg)).append("\n\n");
        }

        var wind = dto.getWind();
        if (wind != null) {
            sb.append("üå¨ –í–µ—Ç–µ—Ä: ").append(String.format("%.1f –º/—Å", wind.getSpeed()))
                    .append(" (–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: ").append(wind.getDeg()).append("¬∞)").append("\n\n");
        }

        var sys = dto.getSys();
        if (sys != null) {
            sb.append("üåÖ –í–æ—Å—Ö–æ–¥ —Å–æ–ª–Ω—Ü–∞: ").append(formatUnix(sys.getSunrise(), dto.getTimezone())).append("\n\n");
            sb.append("üåá –ó–∞–∫–∞—Ç —Å–æ–ª–Ω—Ü–∞: ").append(formatUnix(sys.getSunset(), dto.getTimezone())).append("\n\n");
        }

        return sb.toString();
    }

    private String formatUnix(long unixSeconds, int timezoneSeconds) {
        Instant instant = Instant.ofEpochSecond(unixSeconds);
        ZoneOffset offset = ZoneOffset.ofTotalSeconds(timezoneSeconds);
        LocalDateTime time = LocalDateTime.ofInstant(instant, offset);
        return time.toLocalTime().withSecond(0).toString(); // hh:mm
    }
}
